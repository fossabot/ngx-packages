{"version":3,"file":"ngx-alert-message.mjs","sources":["../../../projects/ngx-alert-message/src/lib/ngx-alert-message.service.ts","../../../projects/ngx-alert-message/src/lib/ngx-alert-message.component.ts","../../../projects/ngx-alert-message/src/lib/alert/alert.component.ts","../../../projects/ngx-alert-message/src/lib/alert/alert.component.html","../../../projects/ngx-alert-message/src/lib/just-alert/just-alert.component.ts","../../../projects/ngx-alert-message/src/lib/just-alert/just-alert.component.html","../../../projects/ngx-alert-message/src/public-api.ts","../../../projects/ngx-alert-message/src/ngx-alert-message.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxAlertMessageService {\n\n  constructor() { }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'lib-ngx-alert-message',\n    template: `\n    <p>\n      ngx-alert-message works!\n    </p>\n  `,\n    styles: [],\n    standalone: true\n})\nexport class NgxAlertMessageComponent {\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n\ntype mode = \"primary\" | \"success\" | \"danger\" | \"info\" | \"warning\";\n@Component({\n    selector: 'ngx-alert',\n    templateUrl: './alert.component.html',\n    styleUrls: ['./alert.component.css'],\n    standalone: true,\n})\nexport class AlertComponent implements OnInit {\n  textColor: string;\n  @Input() mode: mode;\n  @Input() close: any;\n  @Input() bold: any;\n  @Input() text: any;\n  @Input() disabled: any;\n\n  public color: string;\n\n  ngOnInit(): void {\n    if (this.mode === 'success') {\n      this.color = 'green';\n    } else if (this.mode === 'primary') {\n      this.color = '#0d47a1';\n    } else if (this.mode === 'danger') {\n      this.color = 'crimson';\n    } else if (this.mode === 'warning') {\n      this.color = '#ff9800';\n    } else if (this.mode === 'info') {\n      this.color = 'cornflowerblue';\n    } else {\n      this.color = 'white';\n      this.textColor = 'black';\n      this.bold = 'true';\n    }\n  }\n}\n","<div class=\"alert-bar-ngx\" [style.backgroundColor]=\"color\" [style.color]=\"textColor\"\n  [style.fontWeight]=\"bold === 'true' ? 'bold' : '100'\" [style.opacity]=\"disabled === 'true' ? '0.75' : '1'\"\n  [style.cursor]=\"disabled === 'true' ? 'not-allowed' : 'pointer'\">\n  <span class=\"closeIcon\" [hidden]=\"close === 'false'\">\n    &#215;\n  </span>\n  {{ text }}\n</div>","import { Component, OnInit, Input } from '@angular/core';\ntype mode = \"primary\" | \"success\" | \"danger\" | \"info\" | \"warning\";\n\n@Component({\n    selector: 'ngx-just-alert',\n    templateUrl: './just-alert.component.html',\n    styleUrls: ['./just-alert.component.css'],\n    standalone: true,\n})\nexport class JustAlertComponent implements OnInit {\n  textColor: string;\n  @Input() mode: mode;\n  @Input() close: any;\n  @Input() bold: any;\n  @Input() text: any;\n  @Input() disabled: any;\n\n  public color: string;\n\n  ngOnInit(): void {\n    if (this.mode === 'success') {\n      this.color = 'green';\n    } else if (this.mode === 'primary') {\n      this.color = '#0d47a1';\n    } else if (this.mode === 'danger') {\n      this.color = 'crimson';\n    } else if (this.mode === 'warning') {\n      this.color = '#ff9800';\n    } else if (this.mode === 'info') {\n      this.color = 'cornflowerblue';\n    } else {\n      this.color = 'white';\n      this.textColor = 'black';\n      this.bold = 'true';\n    }\n  }\n}\n","<div class=\"just-container\" [style.border]=\"'1px solid ' + mode\" [style.color]=\"mode\"\n  [style.fontWeight]=\"bold === 'true' ? 'bold' : '100'\" [style.opacity]=\"disabled === 'true' ? '0.75' : '1'\"\n  [style.cursor]=\"disabled === 'true' ? 'not-allowed' : 'pointer'\">\n  <div class=\"just-content\">\n    {{ text }}\n  </div>\n  <div class=\"just-close\" [style.backgroundColor]=\"mode\" [style.color]=\"'white'\">\n    <span>&#215;</span>\n  </div>\n</div>","/*\n * Public API Surface of ngx-alert-message\n */\n\nexport * from './lib/ngx-alert-message.service';\nexport * from './lib/ngx-alert-message.component';\n\nexport * from './lib/alert/alert.component';\nexport * from './lib/just-alert/just-alert.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}