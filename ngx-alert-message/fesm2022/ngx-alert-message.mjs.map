{"version":3,"file":"ngx-alert-message.mjs","sources":["../../../projects/ngx-alert-message/src/lib/ngx-alert-message.service.ts","../../../projects/ngx-alert-message/src/lib/ngx-alert-message.component.ts","../../../projects/ngx-alert-message/src/lib/alert/alert.component.ts","../../../projects/ngx-alert-message/src/lib/alert/alert.component.html","../../../projects/ngx-alert-message/src/lib/just-alert/just-alert.component.ts","../../../projects/ngx-alert-message/src/lib/just-alert/just-alert.component.html","../../../projects/ngx-alert-message/src/public-api.ts","../../../projects/ngx-alert-message/src/ngx-alert-message.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxAlertMessageService {\n\n  constructor() { }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'lib-ngx-alert-message',\n    template: `\n    <p>\n      ngx-alert-message works!\n    </p>\n  `,\n    styles: [],\n    standalone: true\n})\nexport class NgxAlertMessageComponent {\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n\ntype mode = \"primary\" | \"success\" | \"danger\" | \"info\" | \"warning\";\n@Component({\n  selector: 'ngx-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['../alert.scss'],\n  standalone: true,\n})\nexport class AlertComponent implements OnInit {\n  textColor: string;\n  @Input() mode: mode = \"success\";\n  @Input() close: boolean = true;\n  @Input() bold: boolean = false;\n  @Input() text: any = \"ngx-alert-message\";\n  @Input() disabled: boolean = false;\n\n  public color: string;\n\n  ngOnInit(): void {\n\n    if (this.mode === 'success') {\n      this.color = 'green';\n    } else if (this.mode === 'primary') {\n      this.color = '#0d47a1';\n    } else if (this.mode === 'danger') {\n      this.color = 'crimson';\n    } else if (this.mode === 'warning') {\n      this.color = '#ff9800';\n    } else if (this.mode === 'info') {\n      this.color = 'cornflowerblue';\n    } else {\n      this.color = 'white';\n      this.textColor = 'black';\n      this.bold = true;\n    }\n  }\n}\n","<div class=\"ngx-alert-container ngx-alert-container-extended\" [style.backgroundColor]=\"color\" [style.color]=\"textColor\"\n  [style.fontWeight]=\"bold  ? 'bold' : '500'\" [style.opacity]=\"disabled ? '0.75' : '1'\"\n  [style.cursor]=\"disabled  ? 'not-allowed' : 'pointer'\">\n  <div class=\"ngx-alert-text\">\n    {{ text }}\n  </div>\n  <span class=\"ngx-alert-close\" [hidden]=\"!close\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 384 512\">\n      <path fill=\"white\"\n        d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" />\n    </svg>\n  </span>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\ntype mode = \"primary\" | \"success\" | \"danger\" | \"info\" | \"warning\";\n\n@Component({\n  selector: 'ngx-just-alert',\n  templateUrl: './just-alert.component.html',\n  styleUrls: ['../alert.scss'],\n  standalone: true,\n})\nexport class JustAlertComponent implements OnInit {\n  textColor: string;\n\n  @Input() mode: mode = \"success\";\n  @Input() close: boolean = true;\n  @Input() bold: boolean = false;\n  @Input() text: any = \"ngx-just-alert-message\";\n  @Input() disabled: boolean = false;\n\n  public color: string;\n\n  ngOnInit(): void {\n    if (this.mode === 'success') {\n      this.color = 'green';\n    } else if (this.mode === 'primary') {\n      this.color = '#0d47a1';\n    } else if (this.mode === 'danger') {\n      this.color = 'crimson';\n    } else if (this.mode === 'warning') {\n      this.color = '#ff9800';\n    } else if (this.mode === 'info') {\n      this.color = 'cornflowerblue';\n    } else {\n      this.color = 'white';\n      this.textColor = 'black';\n      this.bold = true;\n    }\n\n    console.log(this.mode, this.color);\n\n  }\n}\n","<div class=\"ngx-alert-container\" [style.border]=\"'1px solid ' + color\" [style.color]=\"color\"\n  [style.fontWeight]=\"bold  ? 'bold' : '100'\" [style.opacity]=\"disabled  ? '0.75' : '1'\"\n  [style.cursor]=\"disabled  ? 'not-allowed' : 'pointer'\">\n  <div class=\"ngx-alert-text\">\n    {{ text }}\n  </div>\n  <div class=\"ngx-alert-close\" [style.background-color]=\"color\" [style.color]=\"'white'\">\n    <span class=\"closeIcon\" [hidden]=\"!close\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 384 512\">\n        <path fill=\"white\"\n          d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" />\n      </svg>\n    </span>\n  </div>\n</div>\n","/*\n * Public API Surface of ngx-alert-message\n */\n\nexport * from './lib/ngx-alert-message.service';\nexport * from './lib/ngx-alert-message.component';\n\nexport * from './lib/alert/alert.component';\nexport * from './lib/just-alert/just-alert.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}