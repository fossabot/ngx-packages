{"version":3,"file":"ngx-check-permission.mjs","sources":["../../../projects/ngx-check-permission/src/lib/ngx-check-permission.service.ts","../../../projects/ngx-check-permission/src/lib/ngx-check-permission.component.ts","../../../projects/ngx-check-permission/src/lib/ngx-check-permission.module.ts","../../../projects/ngx-check-permission/src/public-api.ts","../../../projects/ngx-check-permission/src/ngx-check-permission.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxCheckPermissionService {\n  constructor() { }\n  private permissionsNames = [\n    'geolocation',\n    'notifications',\n    'push',\n    'midi',\n    'camera',\n    'microphone',\n    'speaker',\n    'device-info',\n    'background-fetch',\n    'background-sync',\n    'bluetooth',\n    'persistent-storage',\n    'ambient-light-sensor',\n    'accelerometer',\n    'gyroscope',\n    'magnetometer',\n    'clipboard',\n    'display-capture',\n    'nfc',\n  ];\n\n  public async getAllPermissions() {\n    const allPermissions: any = [];\n    // We use Promise.all to wait until all the permission queries are resolved\n    await Promise.all(\n      this.permissionsNames.map(async (permissionName: any) => {\n        try {\n          let permission;\n          switch (permissionName) {\n            case 'push':\n              // Not necessary but right now Chrome only supports push messages with  notifications\n              permission = await navigator.permissions.query({\n                name: permissionName,\n              });\n              break;\n            default:\n              permission = await navigator.permissions.query({\n                name: permissionName,\n              });\n          }\n          allPermissions.push({ permissionName, state: permission.state });\n        } catch (e: any) {\n          allPermissions.push({\n            permissionName,\n            state: 'error',\n            errorMessage: e.toString(),\n          });\n        }\n      })\n    );\n    return allPermissions;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-check-permission',\n  template: `\n    <p>\n      ngx-check-permission works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxCheckPermissionComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxCheckPermissionComponent } from './ngx-check-permission.component';\n\n\n\n@NgModule({\n  declarations: [\n    NgxCheckPermissionComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    NgxCheckPermissionComponent\n  ]\n})\nexport class NgxCheckPermissionModule { }\n","/*\n * Public API Surface of ngx-check-permission\n */\n\nexport * from './lib/ngx-check-permission.service';\nexport * from './lib/ngx-check-permission.component';\nexport * from './lib/ngx-check-permission.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}