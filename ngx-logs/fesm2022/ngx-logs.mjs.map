{"version":3,"file":"ngx-logs.mjs","sources":["../../../projects/ngx-logs/src/lib/ngx-logs.service.ts","../../../projects/ngx-logs/src/lib/ngx-logs.component.ts","../../../projects/ngx-logs/src/public-api.ts","../../../projects/ngx-logs/src/ngx-logs.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxLogsService {\n  /**\n   * Logs current page info with all require information's (URL, PATH etc.)\n   */\n  public log(text: string) {\n    console.log(this.currentTime() + ': ' + text);\n  }\n  /**\n   * Logs Error message for custom strings as console logs\n   */\n  public error(text: string) {\n    console.error(this.currentTime() + ': ' + text);\n  }\n  /**\n   * Logs Error message for custom strings as console logs\n   */\n  public warn(text: string) {\n    console.warn(this.currentTime() + ': ' + text);\n  }\n  /**\n   * Same as console logs\n   */\n  public info(text: string) {\n    console.info(this.currentTime() + ': ' + text);\n  }\n  /**\n   * Clears the entire console logs\n   */\n  public clear() {\n    console.clear();\n  }\n  /**\n   * Console logs for iterations with index value - Can be used with for , forin, foreach, do..while\n   */\n  public counter(text: string) {\n    console.count(text);\n  }\n  /**\n   * Logs current page info with all require information's (URL, PATH etc.)\n   */\n  public directory() {\n    console.dir(document.location);\n  }\n  /**\n   * Displays array or JSON of array/dictionary input as a table in console\n   */\n  public table(array: any) {\n    console.table(array);\n  }\n  /**\n   * Logs current page info with all require information's (URL, PATH etc.)\n   */\n  private currentTime(): string {\n    return (\n      (new Date().getHours() > 12\n        ? new Date().getHours() - 12\n        : new Date().getHours()) +\n      ':' +\n      new Date().getMinutes() +\n      ':' +\n      new Date().getSeconds() +\n      ':' +\n      new Date().getMilliseconds() +\n      's'\n    );\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'lib-ngx-logs',\n    template: `\n    <p>\n      ngx-logs works!\n    </p>\n  `,\n    styles: [],\n    standalone: true\n})\nexport class NgxLogsComponent {\n\n}\n","/*\n * Public API Surface of ngx-logs\n */\n\nexport * from './lib/ngx-logs.service';\nexport * from './lib/ngx-logs.component';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}