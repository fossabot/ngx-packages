{"version":3,"file":"ngx-alert-message.mjs","sources":["../../../projects/ngx-alert-message/src/lib/ngx-alert-message.service.ts","../../../projects/ngx-alert-message/src/lib/ngx-alert-message.component.ts","../../../projects/ngx-alert-message/src/lib/ngx-alert-message.module.ts","../../../projects/ngx-alert-message/src/lib/alert/alert.component.ts","../../../projects/ngx-alert-message/src/lib/alert/alert.component.html","../../../projects/ngx-alert-message/src/lib/just-alert/just-alert.component.ts","../../../projects/ngx-alert-message/src/lib/just-alert/just-alert.component.html","../../../projects/ngx-alert-message/src/public-api.ts","../../../projects/ngx-alert-message/src/ngx-alert-message.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxAlertMessageService {\n\n  constructor() { }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-alert-message',\n  template: `\n    <p>\n      ngx-alert-message works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxAlertMessageComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxAlertMessageComponent } from './ngx-alert-message.component';\nimport { AlertComponent, JustAlertComponent } from '../public-api';\n\n\n\n@NgModule({\n  declarations: [NgxAlertMessageComponent, AlertComponent, JustAlertComponent],\n  imports: [],\n  exports: [NgxAlertMessageComponent, AlertComponent, JustAlertComponent],\n})\nexport class NgxAlertMessageModule { }\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n\r\ntype mode = \"primary\" | \"success\" | \"danger\" | \"info\" | \"warning\";\r\n@Component({\r\n  selector: 'ngx-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.css'],\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  textColor: string;\r\n  @Input() mode: mode;\r\n  @Input() close: any;\r\n  @Input() bold: any;\r\n  @Input() text: any;\r\n  @Input() disabled: any;\r\n\r\n  public color: string;\r\n\r\n  ngOnInit(): void {\r\n    if (this.mode === 'success') {\r\n      this.color = 'green';\r\n    } else if (this.mode === 'primary') {\r\n      this.color = '#0d47a1';\r\n    } else if (this.mode === 'danger') {\r\n      this.color = 'crimson';\r\n    } else if (this.mode === 'warning') {\r\n      this.color = '#ff9800';\r\n    } else if (this.mode === 'info') {\r\n      this.color = 'cornflowerblue';\r\n    } else {\r\n      this.color = 'white';\r\n      this.textColor = 'black';\r\n      this.bold = 'true';\r\n    }\r\n  }\r\n}\r\n","<div class=\"alert-bar-ngx\" [style.backgroundColor]=\"color\" [style.color]=\"textColor\"\r\n  [style.fontWeight]=\"bold === 'true' ? 'bold' : '100'\" [style.opacity]=\"disabled === 'true' ? '0.5' : '1'\"\r\n  [style.cursor]=\"disabled === 'true' ? 'not-allowed' : 'pointer'\">\r\n  <span class=\"closeIcon\" [hidden]=\"close === 'false'\">\r\n    &#215;\r\n  </span>\r\n  {{ text }}\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\ntype mode = \"primary\" | \"success\" | \"danger\" | \"info\" | \"warning\";\r\n\r\n@Component({\r\n  selector: 'ngx-just-alert',\r\n  templateUrl: './just-alert.component.html',\r\n  styleUrls: ['./just-alert.component.css'],\r\n})\r\nexport class JustAlertComponent implements OnInit {\r\n  textColor: string;\r\n  @Input() mode: mode;\r\n  @Input() close: any;\r\n  @Input() bold: any;\r\n  @Input() text: any;\r\n  @Input() disabled: any;\r\n\r\n  public color: string;\r\n\r\n  ngOnInit(): void {\r\n    if (this.mode === 'success') {\r\n      this.color = 'green';\r\n    } else if (this.mode === 'primary') {\r\n      this.color = '#0d47a1';\r\n    } else if (this.mode === 'danger') {\r\n      this.color = 'crimson';\r\n    } else if (this.mode === 'warning') {\r\n      this.color = '#ff9800';\r\n    } else if (this.mode === 'info') {\r\n      this.color = 'cornflowerblue';\r\n    } else {\r\n      this.color = 'white';\r\n      this.textColor = 'black';\r\n      this.bold = 'true';\r\n    }\r\n  }\r\n}\r\n","<div class=\"just-container\" [style.border]=\"'1px solid ' + mode\" [style.color]=\"mode\"\r\n  [style.fontWeight]=\"bold === 'true' ? 'bold' : '100'\" [style.opacity]=\"disabled === 'true' ? '0.5' : '1'\"\r\n  [style.cursor]=\"disabled === 'true' ? 'not-allowed' : 'pointer'\">\r\n  <div class=\"just-content\">\r\n    {{ text }}\r\n  </div>\r\n  <div class=\"just-close\" [style.backgroundColor]=\"mode\" [style.color]=\"'white'\">\r\n    <span>&#215;</span>\r\n  </div>\r\n</div>\r\n","/*\n * Public API Surface of ngx-alert-message\n */\n\nexport * from './lib/ngx-alert-message.service';\nexport * from './lib/ngx-alert-message.component';\nexport * from './lib/ngx-alert-message.module';\nexport * from './lib/alert/alert.component';\nexport * from './lib/just-alert/just-alert.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}