{"version":3,"file":"ngx-default-image.mjs","sources":["../../../projects/ngx-default-image/src/lib/ngx-default-image.service.ts","../../../projects/ngx-default-image/src/lib/ngx-default-image.component.ts","../../../projects/ngx-default-image/src/lib/ngx-default-image.directive.ts","../../../projects/ngx-default-image/src/lib/ngx-default-image.module.ts","../../../projects/ngx-default-image/src/public-api.ts","../../../projects/ngx-default-image/src/ngx-default-image.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxDefaultImageService {\n\n  constructor() { }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-default-image',\n  template: `\n    <p>\n      ngx-default-image works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxDefaultImageComponent {\n\n}\n","import { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';\r\nimport { META } from './META';\r\n\r\n@Directive({\r\n  selector: '[NgxDefaultImage]'\r\n})\r\nexport class NgxDefaultImageDirective {\r\n\r\n  @Input() imageURL = \"\";\r\n  private imageElement: HTMLImageElement;\r\n  @Output() imageMetaInfo: EventEmitter<META> = new EventEmitter<META>();\r\n\r\n  public imageMeta: META = {\r\n    isValidImage: false,\r\n    aspectRatio: \"1\",\r\n    x: 0,\r\n    y: 0,\r\n    rwidth: 0,\r\n    rheight: 0,\r\n    renderTime: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    datedOn: {\r\n      loadedOn: 0,\r\n      renderedOn: 0,\r\n      renderTime: 0\r\n    },\r\n    width: 0,\r\n    height: 0,\r\n    src: \"\",\r\n    esrc: \"\",\r\n    alt: \"\",\r\n    crossorigin: \"\"\r\n  };\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.imageElement = this.el.nativeElement as HTMLImageElement;\r\n    let image = new Image();\r\n    this.imageMeta.datedOn = {\r\n      loadedOn: new Date().getTime(),\r\n      renderedOn: new Date().getTime(),\r\n      renderTime: 0\r\n    };\r\n    let canvas = document.createElement(\"canvas\") as HTMLCanvasElement;\r\n    let ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n    image.onload = (event) => {\r\n      ctx.drawImage(image, 0, 0); // draw in image\r\n      this.imageMeta.datedOn.renderedOn = new Date().getTime();\r\n      this.imageMeta.datedOn.renderTime =\r\n        this.imageMeta.datedOn.renderedOn - this.imageMeta.datedOn.loadedOn;\r\n      this.getImageMeta(event, true);\r\n    };\r\n\r\n    image.onerror = (event) => {\r\n      this.getImageMeta(event, false);\r\n      this.imageElement.setAttribute(\"src\", this.imageURL);\r\n    };\r\n\r\n    image.src = this.imageElement.getAttribute(\"src\") || \"\";\r\n  }\r\n\r\n  public getImageMeta(event: any, isValidImage: boolean) {\r\n    let boundingRect: DOMRect = this.imageElement.getBoundingClientRect();\r\n    let img: HTMLImageElement = this.imageElement;\r\n    this.imageMeta = {\r\n      isValidImage: isValidImage,\r\n      aspectRatio: (boundingRect.width / boundingRect.height).toPrecision(2),\r\n      x: boundingRect.x,\r\n      y: boundingRect.y,\r\n      rwidth: boundingRect.width,\r\n      rheight: boundingRect.height,\r\n      renderTime: this.imageMeta.datedOn.renderTime,\r\n      top: boundingRect.top,\r\n      right: boundingRect.right,\r\n      bottom: boundingRect.bottom,\r\n      left: boundingRect.left,\r\n      datedOn: this.imageMeta.datedOn,\r\n      width: event.target.width,\r\n      height: event.target.height,\r\n      src: event.target.src,\r\n      esrc: this.imageURL,\r\n      alt: event.target.alt,\r\n      crossorigin: img.getAttribute(\"crossorigin\") || ''\r\n    };\r\n    this.imageMetaInfo.emit(this.imageMeta);\r\n  }\r\n\r\n  public calculateAspectRatio(width : number, height: number) {\r\n    return width / height;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { NgxDefaultImageComponent } from './ngx-default-image.component';\nimport { NgxDefaultImageDirective } from './ngx-default-image.directive';\n\n\n\n@NgModule({\n  declarations: [\n    NgxDefaultImageComponent,\n    NgxDefaultImageDirective\n  ],\n  imports: [\n  ],\n  exports: [\n    NgxDefaultImageComponent,\n    NgxDefaultImageDirective\n  ]\n})\nexport class NgxDefaultImageModule { }\n","/*\r\n * Public API Surface of ngx-default-image\r\n */\r\n\r\nexport * from './lib/ngx-default-image.service';\r\nexport * from './lib/ngx-default-image.component';\r\nexport * from './lib/ngx-default-image.module';\r\nexport * from './lib/ngx-default-image.directive';\r\nexport * from './lib/META';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}